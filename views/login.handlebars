<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta rel="icon" href="./" type="image/x-icon">
  <link rel="stylesheet" href="/assets/style.css" />
  <script src="./assets/script.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel="stylesheet" />
 <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
  <link   href    = "https://fonts.googleapis.com/css2?family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel = "stylesheet" />
  <link   rel     = "stylesheet" href                                                                     = "https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src     = "https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://vlibras.gov.br/vlibras.min.js"></script>
  <title>Login</title>
  <style>
    h1, h2, h3, a, button {
      font-family: "Sorts Mill Goudy", serif;
    }
    html {
      scroll-behavior: smooth;
    }
    header {
      z-index: 10;
    }
    .custom-gradient {
      background: radial-gradient(circle, hsla(26, 100%, 92%, 1) 0%, hsla(0, 88%, 77%, 1) 71%);
    }
    .eye-icon {
      color: black; /* Cor do ícone */
      font-size: 1.25rem; /* Ajusta o tamanho do ícone */
    }
      input {
      color: black;
    }
       .custom-gradient2 {
      background-image: url(./img/blur.svg);
      background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
    }
  </style>
</head>

<body>

  <style>
    /* Fontes para Títulos */
    h1, h2, h3 {
      font-family: "Libre Bodoni", serif;
    }

    /* Comportamento de rolagem */
    html, body {
      scroll-behavior: smooth;
    }

    /* Gradiente Personalizado */
    .custom-gradient {
      background: radial-gradient(circle, hsla(26, 100%, 92%, 1) 0%, hsla(0, 88%, 77%, 1) 71%);
    }

    /* Imagem de Fundo */
    .image {
      background-image: url(./img/blur.svg);
    }
    .image2 {
      background-image: url(./img/backgroundimg2.svg);
    }
      input {
      color: black;
    }
  </style>
</head>

 <header class="w-full flex justify-center relative z-10">
    <nav class="bg-transparent w-full px-20 py-1 flex justify-between items-center text-black shadow-sm absolute">
      
      <!-- Links de navegação -->
      <div class="flex space-x-6  text-xl">
       <a href="/#home" class="hover:underline text-lg">Home</a>
        <a href="/#mais-pedidos" class="hover:underline text-lg">Mais pedidos</a>
        <a href="/#sobre" class="hover:underline text-lg">Sobre</a>
        <a href="/#depoimentos" class="hover:underline text-base">Depoimentos</a>
        <a href="/#bestsellers" class="hover:underline text-base">Bestsellers</a>
      </div>

      <!-- Logo -->
      <div class="flex-grow flex justify-center items-center">
        <a href="/" aria-label="Início"><img src="img/logo.svg" alt="Logo Patty Nails" class="h-24 mr-48" /></a>
      </div>

      <!-- Botões de Ação -->
      <div class="flex gap-4">
       <button onclick="window.location.href='/login'" 
    class="relative overflow-hidden text-sm px-6 py-2 border-1 border-[#333333] text-[#FFC0CB] bg-white rounded-full transition-all duration-500 ease-in-out shadow-sm hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-[#F1A7C0] group">
    <span class="absolute inset-0 bg-gradient-to-r from-[#FFC0CB] to-[#F1A7C0] transition-transform duration-500 ease-in-out transform scale-0 group-hover:scale-150 rounded-full"></span>
    <span class="relative text-[#000000] transition-colors duration-150 ease-in-out ">Agende Aqui</span>
</button>

        <button onclick="window.location.href='/profile'" 
    class="relative overflow-hidden text-sm px-6 py-2 border-1 border-[#333333] text-[#FFC0CB] bg-transparent rounded-full transition-all duration-500 ease-in-out shadow-sm hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-[#F1A7C0] group">
    <span class="absolute inset-0 bg-gradient-to-r from-[#FFC0CB] to-[#F1A7C0] transition-transform duration-500 ease-in-out transform scale-0 group-hover:scale-150 rounded-full"></span>
    <span class="relative text-[#000000] transition-colors duration-150 ease-in-out ">Meu Perfil </span>
</button>
      </div>
    </nav>
  </header>
      <!-- vlibras -->
  <div vw class="enabled">
    <div vw-access-button class="active"></div>
    <div vw-plugin-wrapper>
      <div class="vw-plugin-top-wrapper"></div>
    </div>
  </div>
  <script src="https://vlibras.gov.br/app/vlibras-plugin.js"></script>
  <script>
    new window.VLibras.Widget('https://vlibras.gov.br/app');
  </script>

  <div class="min-h-screen flex items-center justify-center w-full custom-gradient2">
    <div class="bg-zinc-500/10 flex rounded-2xl shadow-lg max-w-4xl w-full mt-28 h-[600px] relative">
      <!-- Coluna do Formulário de Login -->
      <div class="w-1/2 h-full p-8 flex flex-col justify-center space-y-6 bg-black text-white">
        <div class="w-full">
          <h2 class="text-2xl">Login</h2>
          <p class="text-xs mt-4 text-white">Se você já é um membro, faça login facilmente.</p>
          <form action="/login" method="POST" class="flex flex-col gap-4 mt-4">
            <input class="w-full px-3 py-2 border border-gray-300" type="email" name="email" id="email" placeholder="Email" required>
            <div class="relative">
              <input class="w-full px-3 py-2 border border-gray-300" placeholder="Senha" type="password" name="senha" id="senha" required>
              <span class="absolute right-2 top-2 cursor-pointer" onclick="togglePasswordVisibility('senha', 'eyeIcon')">
                <i id="eyeIcon" class="bi bi-eye eye-icon"></i> <!-- Adicionei a classe eye-icon -->
              </span>
            </div>
            <div class="text-white text-[12px] py-7">
              <input type="checkbox" id="terms" />
              <label for="terms">Eu aceito os <a href="#">termos de uso</a> e <a href="#">politica de privacidade</a></label>
            </div>
            <button type="submit" class="px-4 py-2 border-[0.5px] border-white text-white hover:border-[#E6C2A1] hover:border-2 transition duration-100 text-center">Login</button>
          </form>
          <div class="mt-4">
            <div id="g_id_onload" data-client_id="SUA_CLIENT_ID.apps.googleusercontent.com" data-context="signin" data-ux_mode="popup" data-callback="handleCredentialResponse" data-auto_select="true" data-login_uri="https://seusite.com/login_google"></div>
            <div class="g_id_signin" data-type="standard" data-shape="rectangular" data-theme="outline" data-text="signin_with" data-size="large" data-logo_alignment="left"></div>
          </div>
          <div class="text-sm text-white hover:text-blue-300 underline">
            <a href="/forgot-password">Esqueceu sua senha?</a>
          </div>
        </div>
      </div>

      <!-- Coluna do Formulário de Cadastro -->
      <div class="w-1/2 h-full p-8 flex flex-col justify-center space-y-6 bg-black text-white">
        <h2 class="text-2xl text-start">Cadastrar</h2>
        <p class="text-xs mt-4 text-white text-center md:text-left">Agende seu serviço facilmente.</p>
        <form action="/cadastrar" method="POST" class="flex flex-col gap-4 mt-4" id="cadastroForm">
          <input class="w-full px-3 py-2 border border-gray-300" type="text" name="nome" id="nome" placeholder="Nome" required>
          <input class="w-full px-3 py-2 border border-gray-300" type="tel" name="telefone" id="telefone" placeholder="(00) 00000-0000" required>
          <input class="w-full px-3 py-2 border border-gray-300" type="email" name="email" id="email" placeholder="Email" required>
          <div class="relative">
            <input class="w-full px-3 py-2 border border-gray-300" placeholder="Senha" type="password" name="senha" id="senha-cadastro" required>
            <span class="absolute right-2 top-2 cursor-pointer" onclick="togglePasswordVisibility('senha-cadastro', 'eyeIconCadastro')">
                <i id="eyeIconCadastro" class="bi bi-eye eye-icon"></i>
            </span>
          </div>
          <button type="submit" class="px-4 py-2 border-[0.5px] border-white text-white hover:border-[#E6C2A1] hover:border-2 transition duration-100 text-center">Cadastrar</button>
        </form>
      </div>

      <!-- Painel Rosa -->
      <div id="slider" class="absolute left-0 w-1/2 h-full bg-gradient-to-r custom-gradient transition-all duration-700 flex items-center justify-center">
        <div id="panel-login" class="text-center text-black">
          <h2 class="text-3xl mb-4">Bem-vindo de volta!</h2>
          <button id="btn-signup" class="px-4 py-2 border-[0.5px] border-black text-black hover:border-black hover:border-2 transition duration-100 text-center">Login</button>
        </div>
        <div id="panel-signup" class="text-center text-black hidden">
          <h2 class="text-3xl mb-4">Faça Parte!</h2>
          <button id="btn-login" class="px-4 py-2 border-[0.5px] border-black text-black hover:border-black hover:border-2 transition duration-100 text-center">Cadastre-se</button>
        </div>
      </div>
    </div>
  </div>

  <script>
   const slider = document.getElementById("slider");
const panelLogin = document.getElementById("panel-login");
const panelSignup = document.getElementById("panel-signup");
const btnSignup = document.getElementById("btn-signup");
const btnLogin = document.getElementById("btn-login");

// Alternar para Cadastro
btnSignup.addEventListener("click", () => {
  slider.style.transform = "translateX(100%)"; // Mover painel rosa para a direita
  panelLogin.classList.add("hidden");
  panelSignup.classList.remove("hidden");
});

// Alternar para Login
btnLogin.addEventListener("click", () => {
  slider.style.transform = "translateX(0%)"; // Mover painel rosa de volta para a esquerda
  panelSignup.classList.add("hidden");
  panelLogin.classList.remove("hidden");
});

function togglePasswordVisibility(inputId, iconId) {
  const passwordInput = document.getElementById(inputId);
  const eyeIcon = document.getElementById(iconId);
  if (passwordInput.type === "password") {
    passwordInput.type = "text";
    eyeIcon.classList.remove("bi-eye");
    eyeIcon.classList.add("bi-eye-slash");
  } else {
    passwordInput.type = "password";
    eyeIcon.classList.remove("bi-eye-slash");
    eyeIcon.classList.add("bi-eye");
  }
}

document.getElementById("btn-signup").addEventListener("click", () => {
  document.getElementById("panel-login").classList.add("hidden");
  document.getElementById("panel-signup").classList.remove("hidden");
});

document.getElementById("btn-login").addEventListener("click", () => {
  document.getElementById("panel-signup").classList.add("hidden");
  document.getElementById("panel-login").classList.remove("hidden");
});

function handleCredentialResponse(response) {
  console.log("Encoded JWT ID token: " + response.credential);
  // Enviar token para o backend para validação
}

// Função para validar os termos de uso
function validarTermos() {
    const termsCheckbox = document.getElementById('terms');
    if (!termsCheckbox.checked) {
        Swal.fire({
            icon: 'error',
            title: 'Erro!',
            text: 'Você precisa aceitar os termos de uso para continuar.',
            confirmButtonText: 'OK'
        });
        return false;
    }
    return true;
}

// Exibir SweetAlert2 em caso de erro
const urlParams = new URLSearchParams(window.location.search);
const errorMsg = urlParams.get('error');
const successMsg = urlParams.get('success');

if (errorMsg) {
    Swal.fire({
        icon: 'error',
        title: 'Erro!',
        text: errorMsg,
        confirmButtonText: 'OK'
    });
}
if (successMsg) {
    Swal.fire({
        icon: 'success',
        title: 'Sucesso!',
        text: successMsg,
        confirmButtonText: 'OK'
    });
}

// Função para formatar o telefone
document.getElementById('telefone').addEventListener('input', function (e) {
    let telefone = e.target.value.replace(/\D/g, "");
    if (telefone.length > 11) {
        telefone = telefone.slice(0, 11);
    }
    telefone = telefone.replace(/^(\d{2})(\d)/g, "($1) $2");
    telefone = telefone.replace(/(\d{5})(\d)/, "$1-$2");
    e.target.value = telefone;
});

// Função para validar o telefone
function validarTelefone(telefone) {
    const numeroLimpo = telefone.replace(/\D/g, "");
    return numeroLimpo.length === 11;
}

// Função para validar a senha
function validarSenha(senha) {
    return senha.length >= 6;
}

// Adiciona listeners para validação em tempo real
document.addEventListener('DOMContentLoaded', function() {
    // Validação do formulário de login
    const loginForm = document.querySelector('form[action="/login"]');
    if (loginForm) {
        loginForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Verifica os termos de uso
            if (!validarTermos()) {
                return;
            }
            
            // Se os termos foram aceitos, envia o formulário
            this.submit();
        });
    }

    // Validação do formulário de cadastro
    const form = document.getElementById('cadastroForm');
    const telefoneInput = document.getElementById('telefone');
      
    
    // Validação em tempo real do telefone
    telefoneInput.addEventListener('input', function() {
        if (this.value && !validarTelefone(this.value)) {
            this.classList.add('is-invalid');
        } else {
            this.classList.remove('is-invalid');
        }
    });
    
    // Validação em tempo real da senha
    senhaInput.addEventListener('input', function() {
        if (this.value && !validarSenha(this.value)) {
            this.classList.add('is-invalid');
        } else {
            this.classList.remove('is-invalid');
        }
    });
    
    // Validação no envio do formulário de cadastro
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const telefone = telefoneInput.value;
        const senha = senhaInput.value;
        let isValid = true;
        
        // Validação do telefone
        if (!validarTelefone(telefone)) {
            Swal.fire({
                icon: 'error',
                title: 'Erro!',
                text: 'O telefone deve conter 11 dígitos.',
                confirmButtonText: 'OK'
            });
            isValid = false;
            return;
        }
        
        // Validação da senha
        if (!validarSenha(senha)) {
            Swal.fire({
                icon: 'error',
                title: 'Erro!',
                text: 'A senha deve conter no mínimo 6 caracteres.',
                confirmButtonText: 'OK'
            });
            isValid = false;
            return;
        }
        
        // Se tudo estiver válido, permite o envio do formulário
        if (isValid) {
            form.submit();
        }
    });
});
</script>
  </script>
</body>
</html>

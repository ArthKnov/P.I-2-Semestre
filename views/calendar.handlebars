<!DOCTYPE html>
<html lang = "pt-br">
<head>
    <meta charset = "UTF-8">
    <meta name    = "viewport" content = "width=device-width, initial-scale=1.0">
    <title>Agenda de Eventos</title>
    <script src  = "https://cdn.tailwindcss.com"></script>
    <link   href = "https://fonts.googleapis.com/css2?family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel = "stylesheet" />
    <link   href = "https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.css" rel                    = "stylesheet">
    <script src  = "https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <style>
        body {
            
        }

        #calendar {
    max-width: 1000px;  /* Defina a largura máxima que você deseja */
    margin: 40px auto;  /* Centraliza o calendário na tela e adiciona uma margem superior */
    padding-top: 20px;  /* Ajuste conforme necessário */
}
                /* Estilo ao passar o mouse sobre os botões */
        .fc-toolbar .btn:hover {
            background-color: rgba(255, 255, 255, 0.1);  /* Fundo escurecido */
        }

                /* Estilo para o botão ativo */
        .fc-toolbar .btn.active {
            background-color: rgb(0, 0, 0);        /* Fundo branco para o botão ativo */
            color           : rgb(255, 255, 255);  /* Texto preto */
        }

        .fc-toolbar-chunk .btn {
            background-color: transparent;         /* Fundo transparente */
            color           : rgb(255, 255, 255);  /* Texto preto */
            border          : 1px solid black;     /* Borda preta */
        }

                /* Estilo ao passar o mouse sobre os botões */
        .fc-toolbar-chunk .btn:hover {
            background-color: rgba(255, 255, 255, 0.1);  /* Fundo escurecido */
        }

                /* Estilo para o botão ativo */
        .fc-toolbar-chunk .btn.active {
            background-color: rgb(0, 0, 0);        /* Fundo branco para o botão ativo */
            color           : rgb(255, 255, 255);  /* Texto preto */
        }

                /* Botão desativado */
        .btn-disabled {
            background-color: gray;         /* Fundo cinza */
            cursor          : not-allowed;  /* Cursor não permitido */
        }
        .btn-disabled:hover {
        background-color: rgb(220, 38, 38);  /* Fundo vermelho ao passar o mouse */
    }
    .form-control {
    background-color: #3c3f43; /* Ajuste para a cor desejada (bg-zinc-700) */
    color: white; /* Cor do texto */
}

.form-control:focus {
    background-color: #3c3f43; /* Mantém a cor ao focar */
    color: white; /* Mantém a cor do texto */
    border-color: #6c757d; /* Cor da borda ao focar (opcional) */
    outline: none; /* Remove o contorno padrão (opcional) */
}

.form-control option {
    background-color: #3c3f43; /* Cor de fundo para opções (pode variar entre navegadores) */
    color: white; /* Cor do texto das opções */
}

   .custom-button {
    margin-right: 60px;  /* Ajuste conforme necessário */
}
 header {
      z-index: 10;
    }
  .custom-gradient2 {
      background-image: url(./img/blur.svg);
      background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
    }
    </style>
</head>
<body class = "text-white font-sans custom-gradient2" >
    <!-- Navbar -->

    <header class = "w-full flex justify-center relative z-10">
<nav    class = "bg-transparent shadow- w-full px-20 py-1 flex justify-between absolute items-center text-black shadow-sm">
<div    class = "flex space-x-6">
<a      href  = "#home" class = "hover:underline text-lg">Home</a>
<a      href  = "#mais-pedidos" class = "hover:underline text-lg">Mais pedidos</a>
<a      href  = "#sobre" class = "hover:underline text-lg">Sobre</a>
<a      href  = "#time" class = "hover:underline text-lg">Time</a>
<a      href  = "#depoimentos" class = "hover:underline text-base">Depoimentos</a>
<a      href  = "#bestsellers" class = "hover:underline text-base">Bestsellers</a>

      </div  class="logo-container">
        <div class="flex justify-center items-center flex-grow">
        <a href = "#"><img src = "img/logo.svg" alt = "unha" class = "h-24" /></a>
      </div>
      
   <div class="flex space-x-16"> <!-- Aumentei o espaçamento aqui -->
    <button onclick="window.location.href='/login'" class="px-2 text-lg py-1 border rounded-3xl border-black text-black hover:border-pink-500 hover:bg-white transition duration-100">
        Agende Aqui
    </button>
    <button onclick="window.location.href='/profile'" class="px-2 text-lg py-1 border rounded-3xl border-black text-black hover:border-pink-500 hover:bg-white transition duration-100">
        Meu Perfil
    </button>
    <button onclick="confirmarLogout(event)" class="px-2 text-lg py-1 border rounded-3xl border-black text-black hover:border-pink-500 hover:bg-white transition duration-100">
        Logout
    </button>
</div>
  
</div>
    </nav>
  </header>
  <!-- vlibras -->
    <div vw class               = "enabled">
    <div vw-access-button class = "active"></div>
        <div vw-plugin-wrapper>
          <div class = "vw-plugin-top-wrapper"></div>
        </div>
      </div>
      <script src = "https://vlibras.gov.br/app/vlibras-plugin.js"></script>
      <script>
        new window.VLibras.Widget('https://vlibras.gov.br/app');
      </script>

      
    <div class = "container mx-auto mt-16 p-2 justify-center w-full">
    <h1  class = "text-3xl text-center font-bold mb-6"></h1>
    <div id    = "calendar" class = "bg-zinc-700 rounded-lg p-4 shadow-lg"></div>
    </div>

<!-- Modal para Detalhar Evento -->
<div    class       = "modal fade" id     = "eventModal" tabindex = "-1" role               = "dialog" aria-labelledby = "eventModalLabel" aria-hidden = "true">
<div    class       = "modal-dialog" role = "document">
<div    class       = "modal-content bg-zinc-800 text-white">
<div    class       = "modal-header border-b border-gray-600">
<h5     class       = "modal-title" id    = "eventModalLabel">Detalhes do Agendamento</h5>
<button type        = "button" class      = "close text-white" id = "closeModal" aria-label = "Close">
<span   aria-hidden = "true">&times;</span>
                </button>
            </div>
            <div                    class                  = "modal-body">
            <p><strong>Serviço      :</strong> <span id    = "eventTitle"></span></p>
            <p><strong>Profissional:</strong> <span id     = "eventprofessionalName"></span></p>
            <p><strong>Data         :</strong> <span id    = "eventStart"></span></p>
            <p><strong>Horário      :</strong> <span id    = "eventHora"></span></p>
            <p><strong>Agendado     por:</strong> <span id = "eventUser"></span></p>
            <p><strong>Email        :</strong> <span id    = "eventUserEmail"></span></p>
            <p><strong>Telefone     :</strong> <span id    = "eventUserPhone"></span></p>

                <div    class = "form-group">
                <label  for   = "newEventProfessional" class = "text-gray-400">Novo Profissional:</label>
                <select id    = "newEventProfessional" class = "form-control bg-zinc-700 text-white">
                <option value = "Ana">Ana</option>
                <option value = "Bruna">Bruna</option>
                <option value = "Carla">Carla</option>
                <option value = "Diana">Diana</option>
                    </select>
                </div>
                <div   class = "form-group">
                <label for   = "newEventDate" class = "text-gray-400">Nova Data:</label>
                <input type  = "date" class         = "form-control bg-zinc-700 text-white" id = "newEventDate" required>
                </div>
                <div   class = "form-group mt-2">
                <label for   = "newEventHour" class = "text-gray-400">Novo Horário:</label>
                <input type  = "time" class         = "form-control bg-zinc-700 text-white" id = "newEventHour" required>
                </div>
            </div>
            <div    class = "modal-footer border-t border-gray-600">
            <button type  = "button" class = "bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md btn-disabled" id = "editEvent" disabled>Editar Informações</button>
            <button type  = "button" class = "bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md" id                = "deleteEvent">Cancelar Agendamento</button>
            </div>
        </div>
    </div>
</div>

    <script src = "https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.js"></script>
    <script src = "https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src = "https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
function confirmarLogout(event) {
    event.preventDefault();  // Previne a ação padrão do botão
    Swal.fire({
        title             : 'Tem certeza?',
        text              : "Você deseja sair?",
        icon              : 'warning',
        showCancelButton  : true,
        confirmButtonColor: '#d33',
        cancelButtonColor : '#3085d6',
        confirmButtonText : 'Sim, sair!',
        cancelButtonText  : 'Não, cancelar'
    }).then((result) => {
        if (result.isConfirmed) {
            window.location.href = '/logout';  // Redireciona para logout
        }
    });
}

document.addEventListener('DOMContentLoaded', function () {
    var calendarEl = document.getElementById('calendar');

    var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView  : 'dayGridMonth',
        headerToolbar: {
            left  : 'prev,next today',
            center: 'title',
            right : 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        themeSystem: 'bootstrap',
        events     : '/events',
        eventClick : function (info) {
                // Preencher o modal com as informações do evento clicado
            document.getElementById('eventTitle').innerText            = info.event.title;
            document.getElementById('eventprofessionalName').innerText = info.event.extendedProps.professionalName || 'Desconhecido';
            document.getElementById('eventStart').innerText            = info.event.start.toLocaleDateString();
            document.getElementById('eventHora').innerText             = info.event.extendedProps.hora || 'Desconhecido';
            document.getElementById('eventUser').innerText             = info.event.extendedProps.user.nome || 'Desconhecido';
            document.getElementById('eventUserEmail').innerText        = info.event.extendedProps.user.email || 'N/A';
            document.getElementById('eventUserPhone').innerText        = info.event.extendedProps.user.telefone || 'N/A';

                // Definir os valores padrão da data e horário com os dados do evento
            const                   originalDate          = moment(info.event.start).format('YYYY-MM-DD');
            const                   originalHour          = moment(info.event.extendedProps.hora, 'HH:mm').format('HH:mm');
            const originalProfessionalName = info.event.extendedProps.professionalName; 
            document.getElementById('newEventDate').value = originalDate;
            document.getElementById('newEventHour').value = originalHour;
            const professionalSelect = document.getElementById('newEventProfessional');
professionalSelect.value = originalProfessionalName; // Define o valor padrão

                // Desabilitar o botão de editar inicialmente
            const editButton          = document.getElementById('editEvent');
                  editButton.disabled = true;
            editButton.classList.add('btn-disabled');

                // Adicionar evento de input para verificar alterações
            document.getElementById('newEventDate').addEventListener('input', checkEditability);
            document.getElementById('newEventHour').addEventListener('input', checkEditability);
            document.getElementById('newEventProfessional').addEventListener('change', checkEditability);
                // Exibir o modal
            $('#eventModal').modal('show');

                // Ação de deletar o evento
            document.getElementById('deleteEvent').onclick = function () {
                Swal.fire({
                    title            : 'Você tem certeza?',
                    text             : "Esta ação não pode ser desfeita!",
                    icon             : 'warning',
                    showCancelButton : true,
                    confirmButtonText: 'Sim, excluir!',
                    cancelButtonText : 'Não, cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url    : `/delete-event/${info.event.id}`,
                            type   : 'DELETE',
                            success: function () {
                                    // Armazenar a mensagem de sucesso no localStorage
                                localStorage.setItem('message', 'Seu agendamento foi excluído com sucesso.');
                                    // Recarregar a página
                                location.reload();
                            },
                            error: function (xhr, status, error) {
                                Swal.fire('Erro!', 'Não foi possível excluir o evento: ' + xhr.responseText, 'error');
                            }
                        });
                    }
                });
            };

// Função para verificar se os campos foram alterados
function checkEditability() {
    const newDate = document.getElementById('newEventDate').value;
    const newHour = document.getElementById('newEventHour').value;
    const newProfessional = document.getElementById('newEventProfessional').value;

    if (newDate !== originalDate || newHour !== originalHour || newProfessional !== originalProfessionalName) {
        editButton.disabled = false;
        editButton.classList.remove('btn-disabled');
    } else {
        editButton.disabled = true;
        editButton.classList.add('btn-disabled');
    }
}



                // Função para fechar o modal
            document.getElementById('closeModal').onclick = function () {
                $('#eventModal').modal('hide');
            };

                // Ação de editar o evento
           document.getElementById('editEvent').onclick = async function () {
    const newStart        = document.getElementById('newEventDate').value;
    const newHour         = document.getElementById('newEventHour').value;
    const newProfessional = document.getElementById('newEventProfessional').value;

    if (newStart && newHour && newProfessional) {
        const newStartDateTime = moment(`${newStart}T${newHour}`).format();

        try {
            const response = await fetch(`/edit-event/${info.event.id}`, {
                method : 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    title           : info.event.title,
                    start           : newStartDateTime,
                    professionalName: newProfessional,    // Adicionando o novo profissional
                }),
            });

            if (response.ok) {
                localStorage.setItem('message', 'Evento atualizado com sucesso!');
                location.reload();
            } else {
                throw new Error('Erro ao atualizar o evento');
            }
        } catch (error) {
            console.error('Erro:', error);
            Swal.fire(
                'Erro!',
                'Erro ao atualizar o evento. Verifique o console para mais detalhes.',
                'error'
            );
        }
    } else {
        Swal.fire(
            'Atenção!',
            'Por favor, preencha a nova data, o novo horário e escolha um novo profissional.',
            'warning'
        );
    }
};

        }
    });

    calendar.render();

        // Exibir mensagem de sucesso após recarregar a página
    const message = localStorage.getItem('message');
    if (message) {
        Swal.fire('Sucesso!', message, 'success');
            // Remover a mensagem do localStorage após exibi-la
        localStorage.removeItem('message');
    }
});
</script>


</body>
</html> 
<!DOCTYPE html>
<html lang = "pt-br">
<head>
    <meta charset = "UTF-8">
    <meta name    = "viewport" content = "width=device-width, initial-scale=1.0">
    <title>Agenda de Eventos</title>
<script src  = "https://cdn.tailwindcss.com"></script>
<link   href = "https://fonts.googleapis.com/css2?family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel = "stylesheet" />
<!-- Carregar o FullCalendar versão 5 -->
<link   href = "https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.css" rel = "stylesheet">
<script src  = "https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src  = "https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.js"></script>

    

    <style>
        #calendar {
   max-width  : 1500px;                                                                      /* Defina a largura máxima que você deseja */
   max-height : 800px;                                                                       /* Defina a altura máxima que você deseja */
   color      : rgb(109, 106, 106) ;
   margin     : 55px auto;                                                                   /* Centraliza o calendário na tela e adiciona uma margem superior */
   padding-top: 20px;                                                                        /* Ajuste conforme necessário */
   background : radial-gradient(circle, hsla(26, 100%, 92%, 1) 0%, rgb(250, 193, 193) 71%);
}
  /* Estilo para o grupo de botões do FullCalendar */
.fc-button-group .fc-button {
    background-color: transparent !important;      /* Fundo transparente */
    color           : white !important;            /* Texto branco */
    border          : 1px solid black !important;  /* Borda preta */
}

  /* Estilo para os botões dentro do grupo quando são clicados (selecionados) */
.fc-button-group .fc-button.fc-state-active {
    background-color: black !important;            /* Fundo preto quando selecionado */
    color           : white !important;            /* Texto branco quando selecionado */
    border          : 1px solid black !important;  /* Borda preta quando selecionado */
}

  /* Estilo para os botões ao passar o mouse (hover) */
.fc-button-group .fc-button:hover {
    background-color: black!important;             /* Fundo transparente ao passar o mouse */
    border          : 1px solid black !important;  /* Borda preta ao passar o mouse */
}
  /* Estilo para os botões de Mês */
.fc-dayGridMonth-button {
    background-color: transparent !important;      /* Fundo transparente */
    color           : white !important;            /* Texto branco */
    border          : 1px solid black !important;  /* Borda preta */
}

.fc-dayGridMonth-button:hover {
    background-color: transparent !important;      /* Fundo transparente ao passar o mouse */
    border          : 1px solid black !important;  /* Borda preta */
}

.fc-dayGridMonth-button.fc-state-active {
    background-color: black !important;            /* Fundo preto quando selecionado */
    color           : white !important;            /* Texto branco quando selecionado */
    border          : 1px solid black !important;  /* Borda preta quando selecionado */
}

  /* Estilo para os botões de Semana */
.fc-timeGridWeek-button {
    background-color: transparent !important;      /* Fundo transparente */
    color           : white !important;            /* Texto branco */
    border          : 1px solid black !important;  /* Borda preta */
}

.fc-timeGridWeek-button:hover {
    background-color: transparent !important;      /* Fundo transparente ao passar o mouse */
    border          : 1px solid black !important;  /* Borda preta */
}

.fc-timeGridWeek-button.fc-state-active {
    background-color: black !important;            /* Fundo preto quando selecionado */
    color           : white !important;            /* Texto branco quando selecionado */
    border          : 1px solid black !important;  /* Borda preta quando selecionado */
}

  /* Estilo para os botões de Dia */
.fc-timeGridDay-button {
    background-color: transparent !important;      /* Fundo transparente */
    color           : white !important;            /* Texto branco */
    border          : 1px solid black !important;  /* Borda preta */
}

.fc-timeGridDay-button:hover {
    background-color: transparent !important;      /* Fundo transparente ao passar o mouse */
    border          : 1px solid black !important;  /* Borda preta */
}


.fc-timeGridDay-button.fc-state-active {
    background-color: black !important;            /* Fundo preto quando selecionado */
    color           : white !important;            /* Texto branco quando selecionado */
    border          : 1px solid black !important;  /* Borda preta quando selecionado */
}
.fc-event-main{
    background-color: rgba(255, 181, 255, 0.544) !important;
}

  /* Remove as bordas das células do calendário */
.fc-daygrid-day,
.fc-daygrid-day-frame,
.fc-daygrid-week-number,
.fc-daygrid-day-top {
    border: none !important;
}

  /* Remove as bordas ao redor do calendário, se houver */
.fc-daygrid {
    border: none !important;
}

  /* Estilo para o botão de Voltar ao Dia Atual */
.fc-today-button {
    background-color: transparent !important;      /* Fundo transparente */
    color           : white !important;            /* Texto branco */
    border          : 1px solid black !important;  /* Borda preta */
}

.fc-today-button:hover {
    background-color: transparent !important;      /* Fundo transparente ao passar o mouse */
    border          : 1px solid black !important;  /* Borda preta */
}

.fc-today-button.fc-state-active {
    background-color: black !important;            /* Fundo preto quando selecionado */
    color           : white !important;            /* Texto branco quando selecionado */
    border          : 1px solid black !important;  /* Borda preta quando selecionado */
}

    .form-control {
    background-color: #3c3f43;  /* Ajuste para a cor desejada (bg-zinc-700) */
    color           : white;    /* Cor do texto */
}

.form-control:focus {
    background-color: #3c3f43;  /* Mantém a cor ao focar */
    color           : white;    /* Mantém a cor do texto */
    border-color    : #6c757d;  /* Cor da borda ao focar (opcional) */
    outline         : none;     /* Remove o contorno padrão (opcional) */
}

.form-control option {
    background-color: #3c3f43;  /* Cor de fundo para opções (pode variar entre navegadores) */
    color           : white;    /* Cor do texto das opções */
}

   .custom-button {
    margin-right: 60px;  /* Ajuste conforme necessário */
}
               /* Botão desativado */
        .btn-disabled {
            background-color: gray;         /* Fundo cinza */
            cursor          : not-allowed;  /* Cursor não permitido */
        }
        .btn-disabled:hover {
        background-color: rgb(220, 38, 38);  /* Fundo vermelho ao passar o mouse */
    }
 header {
      z-index: 10;
    }
  .custom-gradient2 {
  background-image   : url(./img/blur.svg);
  background-size    : cover;
  background-position: center;
  background-repeat  : no-repeat;
    }
    #closeModal {
    position  : absolute;
    top       : 10px;
    right     : 10px;
    background: transparent;
    border    : none;
    font-size : 1.5rem;       /* Ajuste conforme necessário */
    cursor    : pointer;
}
.modal-content {
    background-color: rgba(52, 52, 52, 0.8);  /* Cinza com 80% de opacidade */
    color           : white;                  /* Mantém o texto em branco */
}
.form-control {
    background-color: rgba(128, 128, 128, 0.6);  /* Cinza com 60% de opacidade */
    color           : white;                     /* Texto em branco */
    border          : 1px solid #ccc;            /* Bordas sutis */
}

  /* Para placeholders com cor cinza claro */
.modal-content .form-control::placeholder {
    color: rgba(255, 255, 255, 0.7);
}
    </style>
</head>
<body class = "text-white font-sans custom-gradient2" >
    <!-- Navbar -->

<header class = "w-full flex justify-center relative z-10">
<nav    class = "bg-transparent shadow- w-full px-20 py-1 flex justify-around absolute items-center text-black shadow-sm">
<div    class = "flex space-x-6">
<a      href  = "/#home" class         = "hover:underline text-lg">Home</a>
<a      href  = "/#mais-pedidos" class = "hover:underline text-lg">Mais pedidos</a>
<a      href  = "/#sobre" class        = "hover:underline text-lg">Sobre</a>
<a      href  = "/#depoimentos" class  = "hover:underline text-base">Depoimentos</a>
<a      href  = "/#bestsellers" class  = "hover:underline text-base">Bestsellers</a>

      </div class = "logo-container">
      <div  class = "flex justify-center items-center flex-grow">
      <a    href  = "/"><img src = "img/logo.svg" alt = "unha" class = "h-24" /></a>
      </div>
      
   <div class = "flex space-x-16"> <!-- Aumentei o espaçamento aqui -->

    <button onclick = "confirmarLogout(event)" class = "px-4 py-2 text-sm border border-black rounded-3xl text-black hover:border-pink-500 hover:bg-white transition duration-100">
        Logout
    </button>
</div>
  
</div>
    </nav>
  </header>
  <!-- vlibras -->
    <div vw class               = "enabled">
    <div vw-access-button class = "active"></div>
        <div vw-plugin-wrapper>
          <div class = "vw-plugin-top-wrapper"></div>
        </div>
      </div>
      <script src = "https://vlibras.gov.br/app/vlibras-plugin.js"></script>
      <script>
        new window.VLibras.Widget('https://vlibras.gov.br/app');
      </script>

      
    <div class = "container mx-auto mt-16 p-2 justify-center w-full">
    <h1  class = "text-3xl text-center font-bold mb-6"></h1>
    <div id    = "calendar" class = " rounded-lg p-4 shadow-lg"></div>
    </div>

<!-- Modal para Detalhar Evento -->
<div    class       = "modal fade" id     = "eventModal" tabindex = "-1" role               = "dialog" aria-labelledby = "eventModalLabel" aria-hidden = "true">
<div    class       = "modal-dialog" role = "document">
<div    class       = "modal-content bg-zinc-800 text-white">
<div    class       = "modal-header border-b border-gray-600">
<h5     class       = "modal-title" id    = "eventModalLabel">Detalhes do Agendamento</h5>
<button type        = "button" class      = "close text-white" id = "closeModal" aria-label = "Close">
<span   aria-hidden = "true">&times;</span>
                </button>
            </div>
            <div                    class                  = "modal-body">
            <p><strong>Serviço      :</strong> <span id    = "eventTitle"></span></p>
            <p><strong>Profissional:</strong> <span id     = "eventprofessionalName"></span></p>
            <p><strong>Data         :</strong> <span id    = "eventStart"></span></p>
            <p><strong>Horário      :</strong> <span id    = "eventHora"></span></p>
            <p><strong>Agendado     por:</strong> <span id = "eventUser"></span></p>
            <p><strong>Email        :</strong> <span id    = "eventUserEmail"></span></p>
            <p><strong>Telefone     :</strong> <span id    = "eventUserPhone"></span></p>

                <div    class = "form-group">
                <label  for   = "newEventProfessional" class = "text-gray-400">Novo Profissional:</label>
                <select id    = "newEventProfessional" class = "form-control bg-zinc-700 text-white">
                <option value = "Ana">Ana</option>
                <option value = "Bruna">Bruna</option>
                <option value = "Carla">Carla</option>
                <option value = "Diana">Diana</option>
                    </select>
                </div>
                <div   class = "form-group">
                <label for   = "newEventDate" class = "text-gray-400">Nova Data:</label>
                <input type  = "date" class         = "form-control bg-zinc-700 text-white" id = "newEventDate" required>
                </div>
                <div   class = "form-group mt-2">
                <label for   = "newEventHour" class = "text-gray-400">Novo Horário:</label>
                <input type  = "time" class         = "form-control bg-zinc-700 text-white" id = "newEventHour" required>
                </div>
            </div>
            <div    class = "modal-footer border-t border-gray-600">
            <button type  = "button" class = "bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md btn-disabled" id = "editEvent" disabled>Editar Informações</button>
            <button type  = "button" class = "bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md" id                = "deleteEvent">Cancelar Agendamento</button>
            </div>
        </div>
    </div>
</div>
<footer class="bg-pink-50 text-center py-10 w-full">
  <!-- Navigation Links -->
  <div class="flex justify-center space-x-8 text-gray-700 mb-6">
 <a      href  = "/#home" class         = "hover:underline text-lg">Home</a>
<a      href  = "/#mais-pedidos" class = "hover:underline text-lg">Mais pedidos</a>
<a      href  = "/#sobre" class        = "hover:underline text-lg">Sobre</a>
<a      href  = "/#depoimentos" class  = "hover:underline text-base">Depoimentos</a>
<a      href  = "/#bestsellers" class  = "hover:underline text-base">Bestsellers</a>
  </div>
  
  <!-- Social Media Icons -->
  <div class="flex justify-center space-x-6 text-gray-700 mb-10">
    <a href="#" class="hover:text-gray-900"><img src="img/facebook-black.svg" alt="Facebook" class="w-5 h-5"></a>
    <a href="#" class="hover:text-gray-900"><img src="img/Twitter.png" alt="Twitter" class="w-5 h-5"></a>
    <a href="#" class="hover:text-gray-900"><img src="img/Instagram.png" alt="Instagram" class="w-5 h-5"></a>
    <a href="#" class="hover:text-gray-900"><img src="img/Youtube.png" alt="YouTube" class="w-5 h-5"></a>
  </div>

  <!-- Logo and Legal Links -->
  <div class="flex flex-col items-center space-y-4">
    
    <div class="flex items-center space-x-4 text-sm text-gray-500">
      <p>© 2024 PattyNails. Todos os direitos reservados.</p>
     
 
    </div>
         <div class="flex justify-center space-x-6 text-gray-500 mb-10">
        <a href="#" class="hover:underline">Termos de Uso</a>
        <a href="#" class="hover:underline">Política de Privacidade</a>
      </div>
  </div>
</footer>
<!-- Loading Spinner Container -->
<div id="loading-spinner" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white p-8 rounded-lg flex flex-col items-center">
    <div class="w-16 h-16 border-4 border-t-pink-500 border-pink-200 rounded-full animate-spin mb-4"></div>
    <p class="text-gray-700 text-lg font-medium">Processando seu agendamento...</p>
    <p class="text-gray-500 text-sm mt-2">Por favor, aguarde</p>
  </div>
</div>
    <script src = "https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.js"></script>
    <script src = "https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src = "https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
    // Funções auxiliares para controlar o spinner
function showSpinner(message = 'Processando seu agendamento...') {
    const spinner = document.getElementById('loading-spinner');
    const messageElement = spinner.querySelector('.text-lg');
    messageElement.textContent = message;
    spinner.classList.remove('hidden');
}

function hideSpinner() {
    const spinner = document.getElementById('loading-spinner');
    spinner.classList.add('hidden');
}

function confirmarLogout(event) {
    event.preventDefault();  // Previne a ação padrão do botão
    Swal.fire({
        title             : 'Tem certeza?',
        text              : "Você deseja sair?",
        icon              : 'warning',
        showCancelButton  : true,
        confirmButtonColor: '#d33',
        cancelButtonColor : '#3085d6',
        confirmButtonText : 'Sim, sair!',
        cancelButtonText  : 'Não, cancelar'
    }).then((result) => {
        if (result.isConfirmed) {
            window.location.href = '/logout';  // Redireciona para logout
        }
    });
}
    
document.addEventListener('DOMContentLoaded', function () {
    var calendarEl = document.getElementById('calendar');

    var calendar = new FullCalendar.Calendar(calendarEl, {
        locale: 'pt-br',
        initialView: 'dayGridMonth',
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        events: '/events',
        eventClick: function (info) {
            // Preencher o modal com as informações do evento clicado
            document.getElementById('eventTitle').innerText = info.event.title;
            document.getElementById('eventprofessionalName').innerText = info.event.extendedProps.professionalName || 'Desconhecido';
            document.getElementById('eventStart').innerText = info.event.start.toLocaleDateString();
            document.getElementById('eventHora').innerText = info.event.extendedProps.hora || 'Desconhecido';
            document.getElementById('eventUser').innerText = info.event.extendedProps.user.nome || 'Desconhecido';
            document.getElementById('eventUserEmail').innerText = info.event.extendedProps.user.email || 'N/A';
            document.getElementById('eventUserPhone').innerText = info.event.extendedProps.user.telefone || 'N/A';

        // Definir os valores padrão da data e horário com os dados do evento
            const originalDate = moment(info.event.start).format('YYYY-MM-DD');
            const originalHour = info.event.extendedProps.hora || moment(info.event.start).format('HH:mm');
            const originalProfessionalName = info.event.extendedProps.professionalName;
            
            document.getElementById('newEventDate').value = originalDate;
            document.getElementById('newEventHour').value = originalHour;
            const professionalSelect = document.getElementById('newEventProfessional');
            professionalSelect.value = originalProfessionalName;                                      // Define o valor padrão

         // Desabilitar o botão de editar inicialmente
            const editButton = document.getElementById('editEvent');
            editButton.disabled = true;
            editButton.classList.add('btn-disabled');

            // Adicionar evento de input para verificar alterações
            document.getElementById('newEventDate').addEventListener('input', checkEditability);
            document.getElementById('newEventHour').addEventListener('input', checkEditability);
            document.getElementById('newEventProfessional').addEventListener('change', checkEditability);
                  // Exibir o modal
            $('#eventModal').modal('show');

                  // Ação de deletar o evento
            document.getElementById('deleteEvent').onclick = function () {
                Swal.fire({
                    title            : 'Você tem certeza?',
                    text             : "Esta ação não pode ser desfeita!",
                    icon             : 'warning',
                    showCancelButton : true,
                    confirmButtonText: 'Sim, excluir!',
                    cancelButtonText : 'Não, cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $('#eventModal').modal('hide');
                        showSpinner('Excluindo seu agendamento...');
                        
                        $.ajax({
                            url    : `/delete-event/${info.event.id}`,
                            type   : 'DELETE',
                            success: function () {
                                localStorage.setItem('message', 'Seu agendamento foi excluído com sucesso.');
                                location.reload();
                            },
                            error: function (xhr, status, error) {
                                hideSpinner();
                                Swal.fire('Erro!', 'Não foi possível excluir o evento: ' + xhr.responseText, 'error');
                            }
                        });
                    }
                });
            };

     // Função para verificar se os campos foram alterados
            function checkEditability() {
                const newDate = document.getElementById('newEventDate').value;
                const newHour = document.getElementById('newEventHour').value;
                const newProfessional = document.getElementById('newEventProfessional').value;

                if (newDate !== originalDate || newHour !== originalHour || newProfessional !== originalProfessionalName) {
                    editButton.disabled = false;
                    editButton.classList.remove('btn-disabled');
                } else {
                    editButton.disabled = true;
                    editButton.classList.add('btn-disabled');
                }
            }



                  // Função para fechar o modal
            document.getElementById('closeModal').onclick = function () {
                $('#eventModal').modal('hide');
            };

                 
            // Ação de editar o evento
            document.getElementById('editEvent').onclick = async function () {
                const newDate = document.getElementById('newEventDate').value;
                const newHour = document.getElementById('newEventHour').value;
                const newProfessional = document.getElementById('newEventProfessional').value;

                if (newDate && newHour && newProfessional) {
                    const newStartDateTime = moment(`${newDate} ${newHour}`).format();

                    $('#eventModal').modal('hide');
                    showSpinner('Atualizando seu agendamento...');

                    try {
                        const response = await fetch(`/edit-event/${info.event.id}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                title: info.event.title,
                                start: newStartDateTime,
                                hora: newHour, // Adiciona a hora separadamente
                                professionalName: newProfessional,
                            }),
                        });

                        if (response.ok) {
                            localStorage.setItem('message', 'Evento atualizado com sucesso!');
                            // Atualiza o evento no calendário antes de recarregar
                            info.event.setStart(newStartDateTime);
                            info.event.setExtendedProp('hora', newHour);
                            info.event.setExtendedProp('professionalName', newProfessional);
                            calendar.render();
                            location.reload();
                        } else {
                            hideSpinner();
                            throw new Error('Erro ao atualizar o evento');
                        }
                    } catch (error) {
                        console.error('Erro:', error);
                        hideSpinner();
                        Swal.fire(
                            'Erro!',
                            'Erro ao atualizar o evento. Verifique o console para mais detalhes.',
                            'error'
                        );
                    }
                } else {
                    Swal.fire(
                        'Atenção!',
                        'Por favor, preencha a nova data, o novo horário e escolha um novo profissional.',
                        'warning'
                    );
                }
            };
        }
    });

    calendar.render();

           // Exibir mensagem de sucesso após recarregar a página
    const message = localStorage.getItem('message');
    if (message) {
        Swal.fire('Sucesso!', message, 'success');
        localStorage.removeItem('message');
    }
});
FullCalendar.globalLocales.push({
    code: 'pt-br',
    week: {
        dow: 0,   // Domingo começa a semana
        doy: 6    // O primeiro dia da semana será o domingo
    },
    buttonText: {
        prev : 'Anterior',
        next : 'Próximo',
        today: 'Hoje',
        month: 'Mês',
        week : 'Semana',
        day  : 'Dia',
        list : 'Agenda'
    },
      // Adicionar traduções de outros textos conforme necessário
});
</script>


</body>
</html> 
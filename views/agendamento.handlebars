<!DOCTYPE html>
<html lang = "pt-BR">
<head>
    <meta   charset = "UTF-8" />
    <meta   name    = "viewport" content = "width=device-width, initial-scale=1.0" />
    <script src     = "https://cdn.tailwindcss.com"></script>
   
    <link   href = "https://fonts.googleapis.com/css2?family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel = "stylesheet"/>
    <link   rel  = "preconnect" href                                                                     = "https://fonts.googleapis.com" />
    <link   rel  = "preconnect" href                                                                     = "https://fonts.gstatic.com" crossorigin />
    <script src  = "./assets/script.js"></script>
    <script src  = "https://cdn.tailwindcss.com"></script>
    <title>Agendar Sessão</title>
</head>

<style>
    body {
        background-color: black;
        color           : white;
    }
</style>

<body>
    
<nav class = "w-full flex justify-center bg-black py-4 shadow-md">
<div class = "max-w-screen-xl w-full flex items-center justify-between h-20">
<h1  class = "flex-1 text-white font-s">
<img src   = "/img/logo.svg" alt = "Logo" onclick = "window.location.href='/'" style = "cursor: pointer;" />
        </h1>
        <ul class = "flex gap-4">
        <ul class = "flex gap-10 text-white">
        <li class = "px-2 py-1 hidden md:block">
        <a  href  = "/#sobre">Quem somos</a>
                </li>
                <li class = "px-2 py-1 hidden md:block">
                <a  href  = "/#equipe">Equipe</a>
                </li>
                <li class = "px-2 py-1 hidden md:block">
                <a  href  = "/#itens">Especialidade</a>
                </li>
                <li class = "px-2 py-1 hidden md:block">
                <a  href  = "/#loc">Localização</a>
                </li>
            </ul>
            <li>
                <button onclick = "window.location.href='/profile'" class = "px-5 py-1 bg-white text-black rounded-xl transition-transform duration-300 transform hover:scale-105 hover:bg-gray-100 md:text-lg">
                    Perfil
                </button>
            </li>
            <li>
                <button onclick = "window.location.href='/agendamento'" class = "px-5 py-1 bg-zinc-900 text-white rounded-xl transition-transform duration-300 transform hover:scale-105 hover:bg-zinc-800 md:text-lg">
                    Agendar Sessão
                </button>
            </li>
        </ul>
    </div>
</nav>
  <!-- vlibras -->
    <div vw class               = "enabled">
    <div vw-access-button class = "active"></div>
        <div vw-plugin-wrapper>
          <div class = "vw-plugin-top-wrapper"></div>
        </div>
      </div>
      <script src = "https://vlibras.gov.br/app/vlibras-plugin.js"></script>
      <script>
        new window.VLibras.Widget('https://vlibras.gov.br/app');
      </script>
<div class = "flex justify-center items-start min-h-screen pt-12">
<div class = "bg-zinc-500/10 p-10 rounded-lg shadow-lg w-full max-w-lg"> <!-- Alterado para max-w-lg e aumentado o padding -->
<h1  class = "text-center text-2xl font-bold mb-6">Agende sua sessão</h1>
        
        
        <!-- Formulário de agendamento -->
        <form id = "event-form" class = "space-y-4">
            <!-- Seleção de Serviço -->
  <div>
          <label  for   = "service" class                                                = "block mb-2">Selecione o Serviço</label>
          <select id    = "service" name                                                 = "service" class = "w-full p-2 rounded bg-zinc-700 text-white focus:outline-none" required>
          <option value = "">Escolha um serviço</option>
          <option value = "Manicure Simples - R$ 25,00">Manicure Simples - R$ 25,         00</option>
          <option value = "Pedicure Simples - R$ 30,00">Pedicure Simples - R$ 30,         00</option>
          <option value = "Pedicure Completa - R$ 55,00">Pedicure Completa - R$ 55,       00</option>
          <option value = "Esmaltação em Gel - R$ 45,00">Esmaltação em Gel - R$ 45,       00</option>
          <option value = "Alongamento de Unhas - R$ 80,00">Alongamento de Unhas - R$ 80, 00</option>
          <option value = "Remoção de Cutículas - R$ 20,00">Remoção de Cutículas - R$ 20, 00</option>
          <option value = "Spa para Pés - R$ 40,00">Spa para Pés - R$ 40,                 00</option>
          <option value = "Francesinha - R$ 35,00">Francesinha - R$ 35,                   00</option>
          <option value = "Decoração de Unhas - R$ 60,00">Decoração de Unhas - R$ 60,     00</option>
                </select>
        </div>

            <!-- Seleção de Profissional -->
            <div>
                <label  for   = "professionalName" class = "block mb-2">Selecione o Profissional</label>
                <select id    = "professionalName" name  = "professionalName" class = "w-full p-2 rounded bg-zinc-700 text-white focus:outline-none" required disabled>
                <option value = "">Escolha um profissional</option>
                <option value = "Ana">Ana</option>
                <option value = "Bruna">Bruna</option>
                <option value = "Carla">Carla</option>
                <option value = "Diana">Diana</option>
                </select>
            </div>

            <!-- Seleção de Data -->
            <div>
                <label for  = "start" class = "block mb-2">Data do Agendamento</label>
                <input type = "date" id     = "start" name = "start" class = "w-full p-2 rounded bg-zinc-700 text-white focus:outline-none" required disabled>
            </div>

            <!-- Seleção de Horários -->
            <div>
                <label  for   = "time" class = "block mb-2">Horários Disponíveis</label>
                <select id    = "time" name  = "time" class = "w-full p-2 rounded bg-zinc-700 text-white focus:outline-none" required disabled>
                <option value = "">Selecione um horário</option>
                </select>
            </div>

            <button type = "button" class = "w-full p-3 bg-white text-black rounded-lg font-bold transition-transform duration-300 transform hover:scale-105" id = "submit-event" disabled>
                Agendar
            </button>
        </form>
    </div>
</div>


<script src = "https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src = "https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
                // Funções para avançar e voltar nas etapas
        function nextStep(step) {
            $('.form-step').hide();     // Oculta todas as etapas
            $('#step-' + step).show();  // Mostra a etapa atual
        }

        function prevStep(step) {
            $('.form-step').hide();     // Oculta todas as etapas
            $('#step-' + step).show();  // Mostra a etapa anterior
        }

$(document).ready(function() {
    let previousServiceValue = '';

      // When service changes
    $('#service').on('change', function() {
        const serviceValue = $(this).val();
        
          // Enable professional selection if not already selected
        if (!$('#professionalName').val()) {
            $('#professionalName').prop('disabled', !serviceValue);
            $('#professionalName').toggleClass('bg-zinc-700/50 cursor-not-allowed', !serviceValue);
        }

          // If there's a service selected (new or changed)
        if (serviceValue) {
              // Se mudou o serviço e já tem profissional e data selecionados
            if (previousServiceValue && previousServiceValue !== serviceValue) {
                const professionalSelected = $('#professionalName').val();
                const dateSelected         = $('#start').val();
                
                if (professionalSelected && dateSelected) {
                    checkAvailability();
                }
            }
            
            previousServiceValue = serviceValue;
            
              // If professional and date are already selected, update available times
            const professionalSelected = $('#professionalName').val();
            const dateSelected         = $('#start').val();
            
            if (professionalSelected && dateSelected) {
                checkAvailability();
            }
        } else {
            resetFields();
        }
    });

      // When professional changes
    $('#professionalName').on('change', function() {
        const professionalSelected = $(this).val() !== '';
        $('#start').prop('disabled', !professionalSelected);
        $('#start').toggleClass('bg-zinc-700/50 cursor-not-allowed', !professionalSelected);

        if (!professionalSelected) {
            resetTimeAndButton();
        } else {
            const dateSelected = $('#start').val();
            if (dateSelected) {
                checkAvailability();
            }
        }
    });

      // When date changes
    $('#start').on('change', function() {
        if ($(this).val() !== '') {
            checkAvailability();
        } else {
            resetTimeAndButton();
        }
    });

    function resetFields() {
        $('#professionalName').val('').prop('disabled', true);
        $('#start').val('').prop('disabled', true);
        resetTimeAndButton();
    }

    function resetTimeAndButton() {
        $('#time').empty().append('<option value="">Selecione um horário</option>').prop('disabled', true);
        $('#submit-event').prop('disabled', true);
    }

    function checkAvailability() {
        const date           = $('#start').val();
        const professional   = $('#professionalName').val();
        const currentService = $('#service').val();

        if (date && professional) {
            const selectedDate = new Date(date);
            const dayOfWeek    = selectedDate.getDay();

            let availableTimes = [];
            
            if (dayOfWeek >= 0 && dayOfWeek <= 4) { // Monday to Friday
                availableTimes = [
                '08:00', '09:00', '10:00', '11:00',
                '12:00', '13:00', '14:00', '15:00',
                '16:00', '17:00', '18:00', '19:00',
                '20:00'
                ];
            } else if (dayOfWeek === 5 || dayOfWeek === 6) { // Saturday and Sunday
                availableTimes = [];
            }

            $.ajax({
                url        : '/check-availability',
                method     : 'POST',
                contentType: 'application/json',
                data       : JSON.stringify({
                    date            : date,
                    professionalName: professional,
                    service         : currentService  // Adicionando o serviço atual na requisição
                }),
                success: function(response) {
                      // Filtra apenas os horários ocupados pelo serviço atual
                    const occupiedTimes = response
                        .filter(event => event.title === currentService)
                        .map(event => event.hora);

                    const freeTimes = availableTimes.filter(time => !occupiedTimes.includes(time));

                    const timeSelect = $('#time');
                    timeSelect.empty();
                    
                    if (freeTimes.length > 0) {
                        freeTimes.forEach(item => {
                            timeSelect.append(`<option value="${item}">${item}</option>`);
                        });
                        $('#time').prop('disabled', false);
                        $('#submit-event').prop('disabled', false);
                    } else {
                        timeSelect.append('<option value="">Sem horários disponíveis</option>');
                        $('#time').prop('disabled', true);
                        $('#submit-event').prop('disabled', true);
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Erro na requisição:', error);
                    alert('Erro ao buscar horários disponíveis. Tente novamente.');
                }
            });
        }
    }

      // Form submission handler
    $('#submit-event').on('click', function() {
        const service          = $('#service').val();
        const professionalName = $('#professionalName').val();
        const start            = $('#start').val();
        const time             = $('#time').val();

        if (!time) {
            Swal.fire({
                icon : 'warning',
                title: 'Atenção',
                text : 'Por favor, selecione um horário.',
            });
            return;
        }

        $.ajax({
            url        : '/add-event',
            method     : 'POST',
            contentType: 'application/json',
            data       : JSON.stringify({
                title           : service,
                start           : `${start}T${time}`,
                hora            : time,
                professionalName: professionalName
            }),
            success: function(response) {
                Swal.fire({
                    icon : 'success',
                    title: 'Sucesso',
                    text : 'Evento agendado com sucesso!',
                }).then(() => {
                    window.location.href = '/profile';
                });
            },
            error: function(xhr, status, error) {
                console.error('Erro ao criar evento:', error);
                Swal.fire({
                    icon : 'error',
                    title: 'Erro',
                    text : 'Erro ao criar evento. Tente novamente.',
                });
            }
        });
    });
});

    </script>

</body>
</html>
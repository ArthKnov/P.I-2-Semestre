<!DOCTYPE html>
<html lang = "pt-BR">
<head>
 <meta   charset = "UTF-8" />
 <meta   name    = "viewport" content                                                                    = "width=device-width, initial-scale=1.0" />
 <meta   rel     = "icon" href                                                                           = "./" type = "image/x-icon">
 <link   rel     = "stylesheet" href                                                                     = "/assets/style.css" />
 <script src     = "./assets/script.js"></script>
 <script src     = "https://cdn.tailwindcss.com"></script>
 <link   href    = "https://fonts.googleapis.com/css2?family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel = "stylesheet" />
 <link   rel     = "stylesheet" href                                                                     = "https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
 <link   href    = "https://fonts.googleapis.com/css2?family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel = "stylesheet" />
 <link   rel     = "stylesheet" href                                                                     = "https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
 <script src     = "https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 <script src     = "https://vlibras.gov.br/vlibras.min.js"></script>
 <script src     = "https://cdn.tailwindcss.com"></script>

<link rel  = "preconnect" href                                                                                       = "https://fonts.googleapis.com">
<link rel  = "preconnect" href                                                                                       = "https://fonts.gstatic.com" crossorigin>
<link href = "https://fonts.googleapis.com/css2?family=Bree+Serif&family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel = "stylesheet">

<link rel  = "preconnect" href                                                                                                                                                                                                                            = "https://fonts.googleapis.com">
<link rel  = "preconnect" href                                                                                                                                                                                                                            = "https://fonts.gstatic.com" crossorigin>
<link href = "https://fonts.googleapis.com/css2?family=Bree+Serif&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel = "stylesheet">
   
<link href = "https://fonts.googleapis.com/css2?family=Sorts+Mill+Goudy:ital@0;1&display=swap" rel = "stylesheet"/>
<link rel  = "preconnect" href                                                                     = "https://fonts.googleapis.com" />
<link rel  = "preconnect" href                                                                     = "https://fonts.gstatic.com" crossorigin />

<title>Agendar Sessão</title>

</head>

<style>
    body {
        color: white;  
    }
    h1 {
        font-family: 'Sorts Mill Goudy', serif;
        font-size  : 60px;
        margin     : 0;                          /* Remove a margem padrão */
        padding    : 0;                          /* Remove o preenchimento padrão */
    }

    h1 + h1 {
        margin-top: 10px;  /* Ajusta o espaçamento entre os h1 */
    }
     header {
      z-index: 10;
    }
   .custom-gradient2 {
    background-image   : url(./img/blur.svg);
    background-size    : cover;
    background-position: center;
    background-repeat  : no-repeat;
    padding            : 0 20px;               /* Adiciona padding nas bordas laterais */
    gap                : 600px;
}
.min-h-screen {
    background-color: transparent;  /* Para garantir que não haja cor de fundo */
}
.custom-button {
    margin-right: 60px;  /* Ajuste conforme necessário */
}
     /* Ajusta a posição das divs para ficarem 20px mais próximas do centro */

    .custom-container {
         gap: 600px;  /* Reduz o espaço entre as divs para aproximá-las */
    }
      .custom-margin-top {
        margin-top: 205px;  /* Ajusta o espaço entre as divs */
    }
    
    #submit-event:disabled {
        color : rgba(0, 0, 0, 0.5);  /* Cor do texto quando desabilitado */
        cursor: not-allowed;         /* Cursor quando desabilitado */
    }
select {
    background-color: rgba(241, 241, 241, 0.67);  /* Fundo semi-transparente */
    color           : #4B5563;                    /* Cor do texto */
    border          : 1px solid #000;             /* Borda preta */
    padding         : 0.5rem;                     /* Padding para espaçamento interno */
    border-radius   : 0.375rem;                   /* Para manter a borda arredondada */
}

select:disabled {
    background-color: rgba(241, 241, 241, 0.67);  /* Fundo semi-transparente quando desabilitado */
    color           : #9CA3AF;                    /* Cor mais clara para texto desabilitado */
    cursor          : not-allowed;                /* Cursor para indicar que está desabilitado */
}
label {
  color      : rgba(82, 80, 80, 1);
  font-family: "Poppins", serif;
  font-weight: 700;
}

p {
  color      : rgba(82, 80, 80, 1);
  font-family: "Poppins", serif;
  font-weight: 500;
}
.linha {
            border          : none;    /* Remove a borda padrão */
            height          : 2px;     /* Espessura da linha */
            background-color: black;   /* Cor da linha */
            width           : 100%;    /* Largura da linha */
            margin          : 20px 0;  /* Margem superior e inferior */
        }

</style>

<body>
    
<header class = "w-full flex justify-center relative z-10">
<nav    class = "bg-transparent shadow- w-full px-20 py-1 flex justify-around absolute items-center text-black shadow-sm">
<div    class = "flex space-x-6">
<a      href  = "/#home" class         = "hover:underline text-lg">Home</a>
<a      href  = "/#mais-pedidos" class = "hover:underline text-lg">Mais pedidos</a>
<a      href  = "/#sobre" class        = "hover:underline text-lg">Sobre</a>
<a      href  = "/#depoimentos" class  = "hover:underline text-base">Depoimentos</a>
<a      href  = "/#bestsellers" class  = "hover:underline text-base">Bestsellers</a>
    </div>
    <div class = "logo-container">
    <div class = "flex justify-center items-center flex-grow">
    <a   href  = "/"><img src = "img/logo.svg" alt = "unha" class = "h-24" /></a>
        </div>
    </div>
      <!-- Botões de Ação -->
      <div class="flex gap-4">
        <button onclick="window.location.href='/login'" 
    class="relative overflow-hidden text-sm px-6 py-2 border-1 border-[#333333] text-[#FFC0CB] bg-white rounded-full transition-all duration-500 ease-in-out shadow-sm hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-[#F1A7C0] group">
    <span class="absolute inset-0 bg-gradient-to-r from-[#FFC0CB] to-[#F1A7C0] transition-transform duration-500 ease-in-out transform scale-0 group-hover:scale-150 rounded-full"></span>
    <span class="relative text-[#000000] transition-colors duration-150 ease-in-out ">Agende Aqui</span>
</button>

         <button onclick="window.location.href='/profile'" 
    class="relative overflow-hidden text-sm px-6 py-2 border-1 border-[#333333] text-[#FFC0CB] bg-white rounded-full transition-all duration-500 ease-in-out shadow-sm hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-[#F1A7C0] group">
    <span class="absolute inset-0 bg-gradient-to-r from-[#FFC0CB] to-[#F1A7C0] transition-transform duration-500 ease-in-out transform scale-0 group-hover:scale-150 rounded-full"></span>
    <span class="relative text-[#000000] transition-colors duration-150 ease-in-out ">Meu Perfil</span>
</button>
      </div>

</nav>

</header>


  <!-- vlibras -->
    <div vw class               = "enabled">
    <div vw-access-button class = "active"></div>
        <div vw-plugin-wrapper>
          <div class = "vw-plugin-top-wrapper"></div>
        </div>
      </div>
      <script src = "https://vlibras.gov.br/app/vlibras-plugin.js"></script>
      <script>
        new window.VLibras.Widget('https://vlibras.gov.br/app');
      </script>


<div class = "min-h-screen flex items-start justify-center w-full custom-gradient2 custom-container">
    <!-- Div do formulário à esquerda (sem fundo) -->
    <div class = "p-10 pt-10 mt-32 rounded-lg w-full max-w-lg mr-20">
        <h1 >Faça Seu</h1>
        <h1 class = "mb-4" >Agendamento</h1>
        
        <!-- Formulário de agendamento -->
        <form id = "event-form">
            <!-- Seleção de Serviço -->
            <div    class = "mb-12">
            <label  for   = "service" class                                                = "block mb-2">Serviço</label>
            <select id    = "service" name                                                 = "service" class = "w-full p-2 rounded border border-black text-zinc-700 focus:outline-none" required>
            <option value = "">Escolha um serviço</option>
            <option value = "Manicure Simples - R$ 25,00">Manicure Simples - R$ 25,         00</option>
            <option value = "Pedicure Simples - R$ 30,00">Pedicure Simples - R$ 30,         00</option>
            <option value = "Pedicure Completa - R$ 55,00">Pedicure Completa - R$ 55,       00</option>
            <option value = "Esmaltação em Gel - R$ 45,00">Esmaltação em Gel - R$ 45,       00</option>
            <option value = "Alongamento de Unhas - R$ 80,00">Alongamento de Unhas - R$ 80, 00</option>
            <option value = "Remoção de Cutículas - R$ 20,00">Remoção de Cutículas - R$ 20, 00</option>
            <option value = "Spa para Pés - R$ 40,00">Spa para Pés - R$ 40,                 00</option>
            <option value = "Francesinha - R$ 35,00">Francesinha - R$ 35,                   00</option>
            <option value = "Decoração de Unhas - R$ 60,00">Decoração de Unhas - R$ 60,     00</option>
                </select>
            </div>

            <!-- Seleção de Profissional -->
            <div    class = "mb-12">
            <label  for   = "professionalName" class = "block mb-2">Profissional</label>
            <select id    = "professionalName" name  = "professionalName" class = "w-full p-2 rounded border border-black text-zinc-700  focus:outline-none" required disabled>
            <option value = "">Escolha um profissional</option>
            <option value = "Ana">Ana</option>
            <option value = "Bruna">Bruna</option>
            <option value = "Carla">Carla</option>
            <option value = "Diana">Diana</option>
                </select>
            </div>

            <!-- Seleção de Data -->
            <div   class = "mb-12">
            <label for   = "start" class = "block mb-2">Data</label>
            <input type  = "date" id     = "start" name = "start" class = "w-full p-2 rounded border border-black text-zinc-700  focus:outline-none" required disabled>
            </div>

            <!-- Seleção de Horários -->
            <div    class = "mb-12">
            <label  for   = "time" class = "block mb-2">Horário</label>
            <select id    = "time" name  = "time" class = "w-full p-2 rounded border border-black text-zinc-700  focus:outline-none" required disabled>
            <option value = "">Selecione um horário</option>
                </select>
            </div>
        </form>
    </div>

  <!-- Replace the existing right div with this updated version -->
<div class = "p-10 shadow-lg w-full max-w-lg border border-black bg-transparent move-slightly-center-right custom-margin-top flex flex-col items-center rounded-3xl">
<a   href  = "#">
<img src   = "img/logo.svg" alt = "unha" class = "h-32 mb-4" />
    </a>

    <!-- Summary content will be dynamically updated -->
    <div id = "summary-content" style      = "width: 100%; display: none;">
    <p   id = "service-summary" class      = "mb-4 text-black"></p>
    <p   id = "professional-summary" class = "mb-4 text-black"></p>
    <p   id = "duration-summary" class     = "mb-4 text-black"></p>
        
        <hr class = "linha">

        <p id = "total-summary" class = "mb-4 text-black"></p>
        <p id = "date-summary" class  = "mb-4 text-black"></p>
        <p id = "time-summary" class  = "mb-4 text-black"></p>
    </div>

    <!-- Initial message when no selections are made -->
    <p id = "initial-message" class = "mb-4 text-black">Por favor, faça suas seleções no formulário</p>

    <button type = "button" class = "w-full p-3 border border-black text-black font-bold transition-transform duration-300 transform hover:scale-105 rounded-3xl" id = "submit-event" disabled>
       AGENDAR
    </button>
</div>
</div>

<footer class="bg-pink-50 text-center py-10 w-full">
  <!-- Navigation Links -->
  <div class="flex justify-center space-x-8 text-gray-700 mb-6">
 <a      href  = "/#home" class         = "hover:underline text-lg">Home</a>
<a      href  = "/#mais-pedidos" class = "hover:underline text-lg">Mais pedidos</a>
<a      href  = "/#sobre" class        = "hover:underline text-lg">Sobre</a>
<a      href  = "/#depoimentos" class  = "hover:underline text-base">Depoimentos</a>
<a      href  = "/#bestsellers" class  = "hover:underline text-base">Bestsellers</a>
  </div>
  
  <!-- Social Media Icons -->
  <div class="flex justify-center space-x-6 text-gray-700 mb-10">
    <a href="#" class="hover:text-gray-900"><img src="img/facebook-black.svg" alt="Facebook" class="w-5 h-5"></a>
    <a href="#" class="hover:text-gray-900"><img src="img/Twitter.png" alt="Twitter" class="w-5 h-5"></a>
    <a href="#" class="hover:text-gray-900"><img src="img/Instagram.png" alt="Instagram" class="w-5 h-5"></a>
    <a href="#" class="hover:text-gray-900"><img src="img/Youtube.png" alt="YouTube" class="w-5 h-5"></a>
  </div>

  <!-- Logo and Legal Links -->
  <div class="flex flex-col items-center space-y-4">
    
    <div class="flex items-center space-x-4 text-sm text-gray-500">
      <p>© 2024 PattyNails. Todos os direitos reservados.</p>
     
 
    </div>
         <div class="flex justify-center space-x-6 text-gray-500 mb-10">
        <a href="#" class="hover:underline">Termos de Uso</a>
        <a href="#" class="hover:underline">Política de Privacidade</a>
      </div>
  </div>
</footer>

<!-- Loading Spinner Container -->
<div id="loading-spinner" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white p-8 rounded-lg flex flex-col items-center">
    <div class="w-16 h-16 border-4 border-t-pink-500 border-pink-200 rounded-full animate-spin mb-4"></div>
    <p class="text-gray-700 text-lg font-medium">Processando seu agendamento...</p>
    <p class="text-gray-500 text-sm mt-2">Por favor, aguarde</p>
  </div>
</div>

<script src = "https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src = "https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
                    // Funções para avançar e voltar nas etapas
        function nextStep(step) {
            $('.form-step').hide();     // Oculta todas as etapas
            $('#step-' + step).show();  // Mostra a etapa atual
        }

        function prevStep(step) {
            $('.form-step').hide();     // Oculta todas as etapas
            $('#step-' + step).show();  // Mostra a etapa anterior
        }

$(document).ready(function() {
    // Define a data mínima como hoje
    const today = new Date();
    const dd = String(today.getDate()).padStart(2, '0');
    const mm = String(today.getMonth() + 1).padStart(2, '0');
    const yyyy = today.getFullYear();
    const todayStr = `${yyyy}-${mm}-${dd}`;
    $('#start').attr('min', todayStr);
    let previousServiceValue = '';

    // When service changes
    $('#service').on('change', function() {
        const serviceValue = $(this).val();
        
        // Enable professional selection if not already selected
        if (!$('#professionalName').val()) {
            $('#professionalName').prop('disabled', !serviceValue);
            $('#professionalName').toggleClass('bg-zinc-700/50 cursor-not-allowed', !serviceValue);
        }

        if (serviceValue) {
            if (previousServiceValue && previousServiceValue !== serviceValue) {
                const professionalSelected = $('#professionalName').val();
                const dateSelected = $('#start').val();
                
                if (professionalSelected && dateSelected) {
                    checkAvailability();
                }
            }
            
            previousServiceValue = serviceValue;
            
            const professionalSelected = $('#professionalName').val();
            const dateSelected = $('#start').val();
            
            if (professionalSelected && dateSelected) {
                checkAvailability();
            }
        } else {
            resetFields();
        }
    });

    // When professional changes
    $('#professionalName').on('change', function() {
        const professionalSelected = $(this).val() !== '';
        $('#start').prop('disabled', !professionalSelected);
        $('#start').toggleClass('bg-zinc-700/50 cursor-not-allowed', !professionalSelected);

        if (!professionalSelected) {
            resetTimeAndButton();
        } else {
            const dateSelected = $('#start').val();
            if (dateSelected) {
                checkAvailability();
            }
        }
    });

    // When date changes
    $('#start').on('change', function() {
        const selectedDate = new Date($(this).val() + 'T00:00:00');
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        selectedDate.setHours(0, 0, 0, 0);

        // Verifica se a data selecionada é anterior a hoje
        if (selectedDate.getTime() < today.getTime()) {
            Swal.fire({
                icon: 'warning',
                title: 'Data Inválida',
                text: 'Não é possível agendar para datas passadas.'
            });
            $(this).val('');
            resetTimeAndButton();
            return;
        }

        if ($(this).val() !== '') {
            checkAvailability();
        } else {
            resetTimeAndButton();
        }
    });

    function resetFields() {
        $('#professionalName').val('').prop('disabled', true);
        $('#start').val('').prop('disabled', true);
        resetTimeAndButton();
    }

    function resetTimeAndButton() {
        $('#time').empty().append('<option value="">Selecione um horário</option>').prop('disabled', true);
        $('#submit-event').prop('disabled', true);
    }

    function checkAvailability() {
        const date = $('#start').val();
        const professional = $('#professionalName').val();
        const currentService = $('#service').val();

        if (date && professional) {
            const selectedDate = new Date(date);
            const currentDate = new Date();
            const dayOfWeek = selectedDate.getDay();
            const currentHour = currentDate.getHours();
            const currentMinutes = currentDate.getMinutes();
            let availableTimes = [];
            
            if (dayOfWeek >= 0 && dayOfWeek <= 4) { // Monday to Friday
                // Base array of available times
                const baseTimesArray = [
                    '08:00', '09:00', '10:00', '11:00',
                    '12:00', '13:00', '14:00', '15:00',
                    '16:00', '17:00', '18:00', '19:00',
                    '20:00'
                ];

                // Check if it's today
                const isToday = selectedDate.toDateString() === currentDate.toDateString();

                if (isToday) {
                    // Filter times that are at least 30 minutes from now
                    availableTimes = baseTimesArray.filter(time => {
                        const [hours, minutes] = time.split(':').map(Number);
                        if (hours > currentHour) return true;
                        if (hours === currentHour) return minutes > (currentMinutes + 30);
                        return false;
                    });
                } else {
                    availableTimes = baseTimesArray;
                }

                // Ajax request to check occupied times
                $.ajax({
                    url: '/check-availability',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        date: date,
                        professionalName: professional,
                        service: currentService
                    }),
                    success: function(response) {
                        // Modificação principal: agora considera todos os horários ocupados da profissional,
                        // independente do serviço
                        const occupiedTimes = response
                            .filter(event => event.professionalName === professional)
                            .map(event => event.hora);

                        const freeTimes = availableTimes.filter(time => !occupiedTimes.includes(time));

                        const timeSelect = $('#time');
                        timeSelect.empty().append('<option value="">Selecione um horário</option>');
                        
                        if (freeTimes.length > 0) {
                            freeTimes.forEach(item => {
                                timeSelect.append(`<option value="${item}">${item}</option>`);
                            });
                            timeSelect.prop('disabled', false);
                            $('#submit-event').prop('disabled', false);
                        } else {
                            timeSelect.append('<option value="">Sem horários disponíveis</option>');
                            timeSelect.prop('disabled', true);
                            $('#submit-event').prop('disabled', true);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Erro na requisição:', error);
                        alert('Erro ao buscar horários disponíveis. Tente novamente.');
                        resetTimeAndButton();
                    }
                });
            } else {
                resetTimeAndButton();
            }
        } else {
            resetTimeAndButton();
        }
    }

    $('#submit-event').on('click', function() {
        const service = $('#service').val();
        const professionalName = $('#professionalName').val();
        const start = $('#start').val();
        const time = $('#time').val();

        if (!time) {
            Swal.fire({
                icon: 'warning',
                title: 'Atenção',
                text: 'Por favor, selecione um horário.',
            });
            return;
        }

        // Mostrar o loading spinner
        $('#loading-spinner').removeClass('hidden');

        $.ajax({
            url: '/add-event',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                title: service,
                start: `${start}T${time}`,
                hora: time,
                professionalName: professionalName
            }),
            success: function(response) {
                // Esconder o loading spinner
                $('#loading-spinner').addClass('hidden');
                
                Swal.fire({
                    icon: 'success',
                    title: 'Sucesso',
                    text: 'Evento agendado com sucesso!',
                }).then(() => {
                    window.location.href = '/profile';
                });
            },
            error: function(xhr, status, error) {
                // Esconder o loading spinner
                $('#loading-spinner').addClass('hidden');
                
                console.error('Erro ao criar evento:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Erro',
                    text: 'Erro ao criar evento. Tente novamente.',
                });
            }
        });
    });
});

      // Função para habilitar/desabilitar o botão "Agendar"
    function toggleButton() {
        const service          = document.getElementById('service').value;
        const professionalName = document.getElementById('professionalName').value;
        const start            = document.getElementById('start').value;
        const time             = document.getElementById('time').value;

        const button = document.getElementById('submit-event');
        
            // Verifica se todos os campos estão preenchidos
        if (service && professionalName && start && time) {
            button.disabled = false;  // Habilita o botão
        } else {
            button.disabled = true;  // Desabilita o botão
        }
    }

        // Adiciona eventos de input nos campos do formulário
    document.getElementById('service').addEventListener('change', toggleButton);
    document.getElementById('professionalName').addEventListener('change', toggleButton);
    document.getElementById('start').addEventListener('change', toggleButton);
    document.getElementById('time').addEventListener('change', toggleButton);



  // Service durations in minutes
const serviceDurations = {
    'Manicure Simples - R$ 25,00'    : 40,
    'Pedicure Simples - R$ 30,00'    : 45,
    'Pedicure Completa - R$ 55,00'   : 60,
    'Esmaltação em Gel - R$ 45,00'   : 45,
    'Alongamento de Unhas - R$ 80,00': 60,
    'Remoção de Cutículas - R$ 20,00': 30,
    'Spa para Pés - R$ 40,00'        : 60,
    'Francesinha - R$ 35,00'         : 45,
    'Decoração de Unhas - R$ 60,00'  : 60
};

function updateSummary() {
    const service        = $('#service').val();
    const professional   = $('#professionalName').val();
    const date           = $('#start').val();
    const time           = $('#time').val();
    const summaryContent = $('#summary-content');
    const initialMessage = $('#initial-message');

    if (service || professional || date || time) {
        summaryContent.show();
        initialMessage.hide();
    } else {
        summaryContent.hide();
        initialMessage.show();
        return;
    }

      // Update service and price
    if (service) {
        const duration = serviceDurations[service];
        const price    = service.match(/R\$ (\d+),00/)[1];
        
        $('#service-summary').text(service);
        $('#duration-summary').text(`${Math.floor(duration / 60)}h ${duration % 60}min de duração`);
        $('#total-summary').text(`TOTAL R$ ${price},00`);
    }

      // Update professional
    if (professional) {
        $('#professional-summary').text(`Profissional: ${professional}`);
    } else {
        $('#professional-summary').text('');
    }

      // Update date
    if (date) {
        const formattedDate    = new Date(date);
        const days             = ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'];
        const dayName          = days[formattedDate.getDay()];
        const formattedDateStr = formattedDate.toLocaleDateString('pt-BR');
        $('#date-summary').text(`${dayName} ${formattedDateStr}`);
    }

      // Update time
    if (time && service) {
        const duration = serviceDurations[service];
        const endTime  = addMinutes(time, duration);
        $('#time-summary').text(`${time} - (${Math.floor(duration / 60)}h ${duration % 60}min de duração)`);
    }
}

function addMinutes(timeStr, minutes) {
    const [hours, mins] = timeStr.split(':').map(Number);
    const date          = new Date();
    date.setHours(hours, mins);
    date.setMinutes(date.getMinutes() + minutes);
    return date.toTimeString().slice(0, 5);
}

  // Add these event listeners to your existing document.ready function
$(document).ready(function() {
      // Add to your existing ready function
    $('#service, #professionalName, #start, #time').on('change', updateSummary);
});


</script>


</body>
</html>